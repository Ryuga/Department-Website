# Generated by Django 4.0 on 2021-12-24 17:57

from django.db import migrations, models
import django.db.models.deletion
import utils.functions
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('web', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('link', models.SlugField(blank=True, help_text='Leave empty to auto create or add custom', max_length=30, null=True, unique=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True)),
                ('registration_open_date', models.DateTimeField(null=True)),
                ('registration_end_date', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('live', 'Live'), ('ended', 'Ended')], default='upcoming', max_length=10)),
                ('image_url', models.URLField()),
                ('venue', models.CharField(max_length=30)),
                ('topic', models.CharField(blank=True, max_length=30, null=True)),
                ('host', models.CharField(blank=True, max_length=30, null=True)),
                ('skill_level', models.CharField(blank=True, choices=[('Open for all', 'Open for all'), ('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=30, null=True)),
                ('description', models.TextField()),
                ('markdown_content', models.TextField(blank=True, help_text='Markdown content if any', null=True)),
                ('facebook_page_link', models.URLField(blank=True, help_text='Optional', null=True)),
                ('instagram_page_link', models.URLField(blank=True, help_text='Optional', null=True)),
                ('twitter_link', models.URLField(blank=True, help_text='Optional', null=True)),
                ('staff_in_charge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=250)),
                ('creation_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('reg_fee', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('starting_time', models.DateTimeField()),
                ('ending_time', models.DateTimeField()),
                ('image', models.URLField(blank=True, null=True)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.event')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.CharField(default=utils.functions.generate_registration_id, max_length=9, primary_key=True, serialize=False)),
                ('total_value', models.IntegerField(default=0)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events_registered', to='dashboard.event')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.CharField(default=utils.functions.generate_transaction_id, max_length=9, primary_key=True, serialize=False)),
                ('paytm_transaction_id', models.CharField(blank=True, max_length=35, null=True)),
                ('bank_transaction_id', models.CharField(blank=True, max_length=25, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='INITIATED', max_length=15)),
                ('mode', models.CharField(blank=True, max_length=20, null=True)),
                ('token', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.IntegerField(default=0)),
                ('events_selected', models.ManyToManyField(blank=True, to='dashboard.Program')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.registration')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image_url', models.URLField(null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('access_token', models.CharField(max_length=200)),
                ('college_name', models.CharField(blank=True, max_length=150, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('completed_profile_setup', models.BooleanField(default=False)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to='auth.user')),
            ],
        ),
        migrations.AddField(
            model_name='registration',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_student', to='dashboard.student'),
        ),
    ]
