# Generated by Django 4.2.6 on 2023-10-16 19:48

import core.apps.dashboard.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.functions
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('web', '0002_remove_course_image_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('link', models.SlugField(blank=True, help_text='Leave empty to auto create or add custom', max_length=30, null=True, unique=True)),
                ('registration_open_date', models.DateTimeField(null=True)),
                ('registration_end_date', models.DateTimeField(null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('image_url', models.URLField()),
                ('venue', models.CharField(max_length=30)),
                ('topic', models.CharField(blank=True, max_length=30, null=True)),
                ('host', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField()),
                ('markdown_content', models.TextField(blank=True, help_text='Markdown content if any', null=True)),
                ('registration_link', models.URLField(blank=True, help_text='Optional', null=True)),
                ('staff_in_charge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='EventDay',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.event')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('reg_fee', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('spot_registration_open', models.BooleanField(default=True)),
                ('online_registration_open', models.BooleanField(default=True)),
                ('venue', models.CharField(blank=True, max_length=100, null=True)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.event')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.CharField(default=utils.functions.generate_registration_id, max_length=9, primary_key=True, serialize=False)),
                ('qr', models.URLField(blank=True, null=True)),
                ('made_successful_transaction', models.BooleanField(default=False)),
                ('physical_id_allotted', models.BooleanField(default=False)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='dashboard.event')),
            ],
        ),
        migrations.CreateModel(
            name='Slideshow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, unique=True)),
                ('image', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image_url', models.URLField(null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('access_token', models.CharField(max_length=300)),
                ('college_name', models.CharField(blank=True, max_length=150, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('completed_profile_setup', models.BooleanField(default=False)),
                ('registered_programs', models.ManyToManyField(blank=True, to='dashboard.program')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.CharField(default=utils.functions.generate_transaction_id, max_length=9, primary_key=True, serialize=False)),
                ('paytm_transaction_id', models.CharField(blank=True, max_length=35, null=True)),
                ('events_selected_json', models.JSONField(default=core.apps.dashboard.models.default_json, null=True)),
                ('bank_transaction_id', models.CharField(blank=True, max_length=25, null=True)),
                ('creation_time', models.DateTimeField(default=core.apps.dashboard.models.time_now)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='INITIATED', max_length=15)),
                ('mode', models.CharField(blank=True, max_length=20, null=True)),
                ('token', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.FloatField(default=0.0)),
                ('raw_response', models.TextField(null=True)),
                ('mail_sent', models.BooleanField(default=False)),
                ('failure_msg', models.TextField(null=True)),
                ('spot', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-creation_time',),
            },
        ),
        migrations.CreateModel(
            name='TransactionProgramRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_relation', to='dashboard.program')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_relation', to='dashboard.transaction')),
            ],
        ),
        migrations.AddField(
            model_name='transaction',
            name='programs_selected',
            field=models.ManyToManyField(blank=True, related_name='transactions', through='dashboard.TransactionProgramRelation', to='dashboard.program'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='registrar',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.student'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='registration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.registration'),
        ),
        migrations.AddField(
            model_name='registration',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_registrations', to='dashboard.student'),
        ),
        migrations.CreateModel(
            name='ProgramStudentRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_given', models.BooleanField(default=False)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_relation', to='dashboard.program')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_relation', to='dashboard.student')),
            ],
        ),
        migrations.CreateModel(
            name='EventSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('default_display', models.CharField(blank=True, help_text='Will be displayed if no program is assigned', max_length=200, null=True)),
                ('venue', models.CharField(blank=True, help_text='Will be displayed for default', max_length=100, null=True)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.eventday')),
                ('programs', models.ManyToManyField(blank=True, to='dashboard.program')),
            ],
        ),
    ]
